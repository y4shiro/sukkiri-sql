-- C.1.3 RPG データベース
select * from パーティー;
select * from イベント;
select * from 経験イベント;

-- 第 2 章 基本文法と四大命令
-- 1. 主人公パーティーに居るキャラクターの全データをパーティーテーブルから * を用いずに抽出する
select ID, 名称, 職業コード, HP, MP, 状態コード
  from パーティー;

-- 2. パーティーテーブルから、名称 / HP / MP の一覧を取得する
-- 見出しは次のようにする。 なまえ / 現在の HP / 現在の MP
select 名称 as なまえ, HP as "現在のHP", MP as "現在のMP"
  from パーティー;

-- 3. イベントの全データをイベントテーブルから * を用いて抽出する
select * from イベント;

-- 4. イベントテーブルから、イベント番号とイベント名称の一覧を取得する。
-- 各見出しは次のように表示すること。 番号 / 場面
select イベント番号 as 番号, イベント名称 as 場面
  from イベント;

-- 5. パーティーテーブルに、次の 3 つのデータを 1 回の実行ごとに 1 つづつ追加する
insert into パーティー(ID, 名称, 職業コード, HP, MP, 状態コード)
values('A01', 'スガワラ', '21', 131, 232, '03');
insert into パーティー(ID, 名称, 職業コード, HP, MP, 状態コード)
values('A02', 'オーエ', '10', 156, 84, '00');
insert into パーティー(ID, 名称, 職業コード, HP, MP, 状態コード)
values('A03', 'イズミ', '20', 84, 190, '00');

-- 6. パーティーテーブルから、ID が 'C02' のデータを抽出する
select *
  from パーティー
 where ID = 'C02';

-- 7. パーティーテーブルの ID 'A01' のデータについて、HP を 120 に更新する
update パーティー
   set HP = 120
 where ID = 'A01';
 
-- 8. パーティーテーブルから、HP が 100 未満のデータについて、ID / 名称 / HP の一覧を抽出する
select ID, 名称, HP
  from パーティー
 where HP < 100;

-- 9. パーティーテーブルから、MP が 100 以上のデータについて、ID / 名称 / MP の一覧を抽出する
select ID, 名称, MP
  from パーティー
 where MP >= 100;

-- 10. イベントテーブルから、タイプが '特殊' ではないデータについて、イベント番号 / イベント名称 / タイプの一覧を抽出する
select イベント番号, イベント名称, タイプ
  from イベント
 where タイプ <> '3'

-- 11. イベントテーブルから、イベント番号が 5 以下のデータについて、イベント番号とイベント名称を抽出する
select イベント番号, イベント名称
  from イベント
 where イベント番号 <= 5;

-- 12. イベントテーブルから、イベント番号が 20 を超過しているデータについて、イベント番号とイベント名称を抽出する
select イベント番号, イベント名称
  from イベント
 where イベント番号 > 20;

-- 13. イベントテーブルから、別のイベントのクリアを前提としていないイベントにについて、イベント番号 / イベント名称 を抽出する
select イベント番号, イベント名称
  from イベント
 where 前提イベント番号 is null;

-- 14. イベントテーブルから、次に発生するイベントが決められているイベントについて、イベント番号 / イベント名称 / 後続イベント番号を抽出する
select イベント番号, イベント名称, 後続イベント番号
  from イベント
 where 後続イベント番号 is not null;

-- 15. 名称に 'ミ' が含まれるパーティーテーブルのデータについて、状態コードをを '眠り' ('01') に更新する
update パーティー
   set 状態コード = '01'
 where 名称 like '%ミ%';

-- 16. HP が 120 ~ 160 の範囲にあるパーティーテーブルのデータについて、ID / 名称 / HP の一覧を抽出する
-- ただし、記述する条件式は 1 つであること
select ID, 名称, HP
  from パーティー
 where HP between 120 and 160;

-- 17. 職業が 勇者 / 戦士 / 武闘家 のいずれかであるパーティーテーブルのデータについて、名称と職業コードを抽出する
-- ただし、記述する条件式は 1 つであること
select 名称, 職業コード
  from パーティー
 where 職業コード in ('01', '10', '11');

-- 18. 状態コードが異常なしと気絶のどちらでもないパーティーテーブルのデータについて、名称と状態コードを抽出する
-- ただし、記述する条件式は 1 つであること
select 名称, 状態コード
  from パーティー
 where 状態コード not in ('00', '09');

-- 19. パーティーテーブルから、HP と MP が共に 100 を超えているデータを抽出する
select *
  from パーティー
 where HP > 100 and MP > 100;

-- 20. パーティーテーブルから、ID が 'A' で始まり、職業コードの 1 文字目が '2' であるデータを抽出する
select *
  from パーティー
 where ID like 'A%' and 職業コード like '2%'

-- 21. イベントテーブルから、タイプが '強制' で、事前にクリアが必要なイベントかつ次に発生するイベントが設定されているデータを抽出する
select *
  from イベント
 where タイプ = '1'
   and 前提イベント番号 is not null
   and 後続イベント番号 is not null;

-- 23. パーティーテーブルから、パーティーの現在の状態コード一覧を取得する。重複は除外する
select distinct 状態コード
  from パーティー;

-- 24. パーティーテーブルから、ID と名称を抽出し、ID の昇順に並べる
select ID, 名称
  from パーティー
 order by ID;

-- 25. パーティーテーブルから、名称と職業コードを名称の降順に抽出する
select 名称, 職業コード
  from パーティー
 order by 名称 DESC;

-- 26. パーティーテーブルから、名称 / HP / 状態コードを、状態コードの昇順かつ HP の高い順に抽出する
select 名称, HP, 状態コード
  from パーティー
 order by HP DESC;

-- 27. イベントテーブルから、タイプ / イベント番号 / イベント名称 / 前提イベント番号 / 後続イベント番号を抽出する
-- タイプの昇順かつイベント番号の昇順に抽出し、並び替えには列番号を指定する
select タイプ, イベント番号, イベント名称, 前提イベント番号, 後続イベント番号
  from イベント
 order by 1, 2;

-- 28. パーティーテーブルから、HP の高い順に 3 件抽出する
select *
  from パーティー
 order by HP desc
offset 0 fetch first 3 rows only;

-- limit を用いた場合
select *
  from パーティー
 order by HP desc
 limit 3;

-- 29. パーティーテーブルから、MP が 3 番目に高いデータを抽出する
select *
  from パーティー
 order by MP desc
offset 2 fetch first 1 rows only;

-- 30. イベントテーブルと経験イベントテーブルから、まだ参加していないイベントの番号を抽出する
-- イベント番号順に表示すること
select イベント番号 from イベント
except
select イベント番号 from 経験イベント
 order by 1;

-- 31. イベントテーブルと経験イベントテーブルから、既にクリアされたイベントのうち、タイプがフリーのイベント番号を対象とする。
-- 抽出には集合演算子を用いること
select イベント番号
  from 経験イベント
 where クリア区分 = '1'
intersect
select イベント番号
  from イベント
 where タイプ = '2';

-- 32. パーティーテーブルから、次の形式の一覧を取得する。 職業区分 / 職業コード / ID / 名称
-- 職業区分は、物理攻撃が得意なもの(職業コードが 1 から始まる)を 'S'、魔法攻撃が得意なもの(職業コードが 2 から始まる)を 'M'、それ以外を 'A' と表示する。
-- また、一覧は職業コード順にソートする
select case 
	     when 職業コード like '1_' then 'S'
	     when 職業コード like '2_' then 'M'
	     else 'A'
  	   end as 職業区分,
       職業コード,
       ID,
       名称
  from パーティー
 order by 職業コード;

-- 33. アイテム '勇気の鈴' を装備すると、HP が 50 アップする。このアイテムを装備した時の各キャラクターの HP を適切な列を用いて次の別名で取得する。
-- ただし、このアイテムは '武道家' と '学者' しか装備できない
-- - なまえ / 現在の HP / 装備後の HP
select 名称 as なまえ,
       hp as 現在のHP,
       hp + 50 as 装備後のHP
  from パーティー
 where 職業コード in('11', '21');

-- 34. ID が 'A01' / 'A03' のキャラクターがアイテム '知恵の指輪' を装備し、MP が 20 ポイントアップした
-- その該当データの MP を更新する
update パーティー
   set MP = MP + 20
 where ID in('A01', 'A03');

-- 35. 武闘家の技 'スッキリパンチ' は、自分の HP を 2 倍したポイントのダメージを敵に与える
-- この技を使った時のダメージを適切な列を用いて別名で抽出する
-- なまえ / 現在の HP / 予想されるダメージ
select 名称 as なまえ, hp as 現在のHP, hp * 2 as 予想されるダメージ
  from パーティー
 where 職業コード = '11';

-- 36. 現在、主人公のパーティーにいるキャラクターの状況について、適切な列を用いて次の別名で一覧を取得する
-- なまえ、 HP と MP、 ステータス
-- 'HP と MP' は '/' でつなげたものとする
-- 'ステータス' には状態コードを日本語に置き換えたものを表示するが、異常が無い場合は何も表示しない
select 名称 as なまえ,
       HP || '/' || MP as HPとMP,
       case 状態コード
         when '00' then NULL
         when '01' then '眠り'
         when '02' then '毒'
         when '03' then '沈黙'
         when '04' then '混乱'
         when '09' then '気絶'
       end as ステータス
  from パーティー

-- 37. イベントテーブルから、次の形式でイベント一覧を取得する。イベント番号 / イベント名称 / タイプ / 発生時期
-- タイプはコードを日本語で置き換えたもの、発生時期は次の条件に応じたものを表示する
-- - イベント番号が 1 ~ 10 なら '序盤'、11 ~ 17 なら '中盤', それ以降は '終盤'
select イベント番号,
       イベント名称,
       case タイプ
         when '1' then '強制'
         when '2' then 'フリー'
         when '3' then '特殊'
       end as タイプ,
       case
         when イベント番号 between 1 and 10 then '序盤'
         when イベント番号 between 11 and 17 then '中盤'
         when イベント番号 > 17 then '終盤'
       end as 発生時期
  from イベント

-- 38. 敵の攻撃 'ネームバリュー' は、名前の文字数を 10 倍したポイントのダメージがある
-- この攻撃を受けた時の各キャラクターの予想ダメージを適切な列を用いて次の別名で取得する
-- なまえ / 現在の HP / 予想ダメージ
select 名称 as なまえ,
       HP as 現在のHP,
       length(名称) * 10 as 予想ダメージ
  from パーティー;

-- 39. 敵の攻撃 '四苦八苦' を受け、HP または MP が 4 で割り切れるキャラクターは混乱した
-- 当該するキャラクターのデータを更新する。なお、剰余の計算には % 演算子もしくは MOD 関数を使用すること
update パーティー
   set 状態コード = '04'
 where HP % 4 = 0; or MP % 4 = 0;
-- MOD 関数の場合
update パーティー
   set 状態コード = '04'
 where mod(HP, 4) = 0; or MOD(MP, 4) = 0;

-- 40. 町の道具屋で売値が 777 のアイテム '女神の祝福' を買ったところ、会員証を持っていたため 30 % 割引で購入できた
-- この際に支払った金額を求める。端数は切り捨て
select TRUNC(777 * 0.7, 0) as 支払った金額;

-- 41. 戦闘中にアイテム '女神の祝福' を使った所、全員の HP と MP がそれまでの値に対して 3 割ほど回復した
-- 当該データを更新する。端数は四捨五入する
update パーティー
   set HP = round(HP * 1.3, 0), MP = round(MP * 1.3, 0);

-- 42. 戦士の技 'Step by Step' は、攻撃回数に応じて自分の HP をべき乗したポイントのダメージを与える
-- 3 回攻撃した時の、各階の攻撃ポイントを適切な列を用いて次の別名で取得する。ただし、1 回目は 0 乗から始まる
-- なまえ / HP / 攻撃 1 回目 / 攻撃 2 回目 / 攻撃 3 回目
select 名称 as なまえ,
       HP,
       HP ^ 0 as 攻撃1回目,
       HP ^ 1 as 攻撃2回目,
       HP ^ 2 as 攻撃3回目
  from パーティー
 where 職業コード = '10';
-- Power 関数を使った場合
select 名称 as なまえ,
       HP,
       Power(HP, 0) as 攻撃1回目,
       Power(HP, 1) as 攻撃2回目,
       Power(HP, 2) as 攻撃3回目
  from パーティー
 where 職業コード = '10';

-- 43. 現在、主人公のパーティに居るキャラクターに付いて、HP と状態コードから、リスクを重み付けした一覧を適切な列を用いて次の別名で取得する
-- なまえ / HP / 状態コード / リスク値
-- リクス値の算出基準は次の通り
-- - HP が 50 以下ならリスク値 3
-- - HP が 51 以上 100 以下ならリスク値 2
-- - HP が 101 以上 150 以下ならリスク値 1
-- - HP が 150 以上ならリスク値 0
-- - 状態コードの値をそのままリスク値に加算
-- また、リスク値の高い順かつ HP の低い順にソートする
select 名称 as なまえ,
       HP,
       状態コード,
       case
	     when HP <= 50 then 3 + cast(状態コード as integer)
	     when HP >= 51 and HP <= 100 then 2 + cast(状態コード as integer)
	     when HP >= 100 and HP <= 150 then 1 + cast(状態コード as integer)
	     when HP >= 151 then 0 + cast(状態コード as integer)
	     else cast(状態コード as integer)
       end as リスク値
  from パーティー
 order by リスク値 desc, HP;

-- 44. イベントテーブルより、イベントの一覧をイベント番号順に次の形式で取得する
-- 前提イベント番号 / イベント番号 / 後続イベント番号
-- 前提または後続イベントがない場合は、それぞれ '前提なし' / '後続なし' と表示すること
select coalesce(cast(前提イベント番号 as varchar), '前提なし') as 前提イベント番号,
       イベント番号,
       coalesce(cast(後続イベント番号 as varchar), '後続なし') as 後続イベント番号
  from イベント
 order by イベント番号;

-- 45. 主人公のパーティにいるキャラクターの HP と MP について、最大値、最小値、平均値をそれぞれ求める
select MAX(HP) as HP最大値,
       MIN(HP) as HP最小値,
       AVG(HP) as HP平均値,
       MAX(MP) as MP最大値,
       MIN(MP) as MP最小値,
       AVG(MP) as MP平均値
  from パーティー;

-- 46. イベントテーブルから、タイプ別にイベントの数を取得する。ただし、タイプは日本語で表示すること
select case タイプ
         when '1' then '強制'
         when '2' then 'フリー'
         when '3' then '特殊'
       end as タイプ,
       count(イベント番号) as イベント数
  from イベント
 group by タイプ;

-- 47. 経験イベントテーブルから、クリアの結果別にクリアしたイベントの数を取得する。クリア結果順に表示すること
select クリア結果, count(イベント番号) as イベント数
  from 経験イベント
 where クリア区分 = '1'
 group by クリア結果
 order by クリア結果;

-- 48. 攻撃魔法 '小さな奇跡' は、パーティー全員の MP によって敵の行動が異なる。
-- 次の条件に従って、現在のパーティーがこの魔法を使った時の敵の行動を表示する
-- パーティー全員の MP が 500 未満なら '敵は見とれている!'
-- パーティー全員の MP が 500 以上 1000 未満なら '敵は呆然としている!'
-- パーティー全員の MP が 1000 以上なら '敵はひれ伏している!'
select case
         when SUM(MP) < 500 then '敵は見とれている!'
         when SUM(MP) >= 500 and SUM(MP) < 1000 then '敵は呆然としている!'
         when SUM(MP) >= 1000 then 'ひれ伏している!'
	   end as 小さな奇跡
  from パーティー;

-- 49. 経験イベントテーブルから、クリアしたイベント数と参加したもののまだクリアしていないイベントの数を次の形式で表示する
-- 区分 / イベント数
select case クリア区分 
         when '1' then 'クリアした'
         when '0' then '参加したがクリアしていない'
       end as 区分,
       count(イベント番号) as イベント数
  from 経験イベント
 group by クリア区分;

-- 50. 職業タイプごとの HP と MP の最大値、最小値、平均値を抽出する
-- ただし、職業タイプは職業コードの 1 文字目によって分類すること
select substring(職業コード, 1, 1) as 職業タイプ,
       MAX(HP) as 最大HP,
       MIN(HP) as 最小HP,
       AVG(MP) as 平均HP,
       MAX(MP) as 最大MP,
       MIN(MP) as 最小MP,
       AVG(MP) as 平均MP
  from パーティー
 group by substring(職業コード, 1,1);

-- 51. ID の 1 文字目によってパーティーを分類し、HP の平均が 100 を超えているデータを抽出する
-- 次の項目を抽出すること
-- ID による分類 / HP の平均 / MP の平均
select substring(id, 1, 1) as IDによる分類,
       AVG(HP) as HPの平均,
       AVG(MP) as MPの平均
  from パーティー
 group by substring(id, 1, 1)
having AVG(HP) >= 100;

-- 52. ある洞窟に存在する '力の扉' は、キャラクターの HP によって開けることの出来る扉の数が決まっている
-- 現在のパーティーで開けることのできる扉の合計数を求める
-- 条件は次の通り
-- HP < 100 のキャラクター : 1枚
-- HP >= 100 かつ HP < 150 のキャラクター : 2 枚
-- HP >= 150 かつ HP < 200 のキャラクター : 3 枚
-- HP >= 200  のキャラクター : 5 枚
select SUM(case
	         when HP < 100 then 1
	         when HP >= 100 and HP < 150 then 2
	         when HP >= 150 and HP < 200 then 3
	         when HP >= 200 then 5
	       end) as 開けられる扉の数
  from パーティー;

-- 第 7 章 副問合せ
-- 53. 勇者の現在の HP が、パーティー全員の HP の何 %  にあたるかを求めたい。適切な列を用いて次の別名で抽出する
-- ただし、割合は小数点第 2 位 を四捨五入する
-- なまえ / 現在の HP / パーティーでの割合
select 名称 as なまえ,
       HP as 現在のHP,
       round(cast(HP as numeric) / (select SUM(HP) from パーティー) * 100, 1)
  from パーティー
 where 職業コード = '01';
 
-- 54. 魔法使いは回復魔法 'みんなからお裾分け' を使って MP を回復した。
-- この魔法は、本人を除くパーティー全員の MP 合計値の 10 % をもらうことが出来る
-- 端数を四捨五入して魔法使いの MP を更新する。魔法使い以外の MP は更新しなくても良い
update パーティー
   set MP = MP + (select round(SUM(MP * 0.1))
                    from パーティー
                   where 職業コード <> '20')
 where 職業コード = '20';

-- 55. 経験イベントテーブルから、これまでにクリアしたイベントのうち、タイプが '強制' または '特殊' であるものについて、次の形式で抽出する
-- イベント番号 / クリア結果
-- 抽出には副問合せを使用すること
select イベント番号, クリア結果
  from 経験イベント
 where クリア区分 = '1'
   and イベント番号 in (select イベント番号
                        from イベント
                       where タイプ in ('1', '3'));

-- 56. パーティーテーブルから、パーティー内で最も高い MP を持つキャラクター名とその MP を抽出する。
-- 抽出には副問合せを用いること
select MP, 名称
  from パーティー
 where MP = (select MAX(MP) from パーティー);

-- 57.  これまでに着手していないイベントについて、イベント番号とその名称をイベント番号順に抽出する
-- 抽出には副問合せを用いること
select イベント番号, イベント名称
  from イベント
 where イベント番号 not in (select イベント番号 from 経験イベント)
 order by イベント番号;

-- 58. これまでに着手していないイベントの数を抽出する。抽出には副問合せを用いること
select count(*) as 未着手イベントの数
  from イベント
 where イベント番号 not in (select イベント番号 from 経験イベント);

-- except を用いた場合
select count(*) as 未着手イベントの数
  from (select イベント番号
          from イベント
        except
        select イベント番号
          from 経験イベント) as SUB;

-- 59. 5 番目にクリアしたイベントのイベント番号よりも小さいイベントに関して、イベント番号とイベント名称を抽出する
select イベント番号, イベント名称
  from イベント
 where イベント番号 < (select イベント番号
                       from 経験イベント
                      limit 1 offset 4);
-- 解答例
select イベント番号, イベント名称
  from イベント
 where イベント番号 < ALL(select イベント番号
                          from 経験イベント
                         where ルート番号 = 5);

-- 60. これまでにパーティーがクリアしたイベントを前提としているイベントの一覧を次の形で抽出する
-- イベント番号 / イベント名称 / 前提イベント番号
select イベント番号, イベント名称, 前提イベント番号
  from イベント
 where 前提イベント番号 in (select イベント番号 from 経験イベント where クリア区分 = '1');

-- 解答例
select イベント番号, イベント名称, 前提イベント番号
  from イベント
 where 前提イベント番号 = any (select イベント番号 from 経験イベント where クリア区分 = '1');

-- 61. パーティーは、イベント番号 '9' のイベントを結果 'B' でクリアし、その次に発生するイベントに参加した
-- この内容を経験テーブルに記録する
-- なお、更新と追加をそれぞれ別の SQL 文で記述すること
update 経験イベント
   set クリア区分 = '1',
       クリア結果 = 'B'
 where イベント番号 = '9';

insert into 経験イベント
values ((select イベント番号
           from イベント
          where 前提イベント番号 = '9'),
        '0',
        null,
        (select MAX(ルート番号) + 1
           from 経験イベント));
